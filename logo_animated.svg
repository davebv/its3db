
<svg version="1.1"
  baseProfile="full"
  width="100%" height="100%"
  viewBox="0 0 500 500"
  class="logo3dB"
  id="logo"
  xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink">
  <style>


@font-face {
    font-family: 'rr_beaverregular';
    src: url('beaver.eot');
    src: url('beaver.eot?#iefix') format('embedded-opentype'),
         url('beaver.woff2') format('woff2'),
         url('beaver.woff') format('woff'),
         url('beaver.ttf') format('truetype'),
         url('beaver.svg#rr_beaverregular') format('svg');
    font-weight: normal;
    font-style: normal;

}

.glitch {
  fill: url(#txtGradient);
  background: black;
}


  </style>
  <defs>
    <radialGradient id="Gradient" cx="0.5" cy="0.5" r="0.45">
      <stop offset="0" stop-color="black" stop-opacity="1" />
      <stop offset="0.5" stop-color="black" stop-opacity="0.5" />
      <stop offset="1" stop-color="white" stop-opacity="1" />
    </radialGradient>

    <mask id="Mask">
      <rect x="0" y="0" rx="0" ry="0" width="500" height="500" fill="url(#Gradient)"/>
    </mask>
    
    <polygon id="invertedTriangle" points="20,130 250,480 480,130" fill-opacity="0"/>

    <linearGradient id="txtGradient" gradientUnits="userSpaceOnUse">
      <stop offset="0" stop-color="#b2b2b2" stop-opacity="1" />
      <stop offset="0.5" stop-color="white" stop-opacity="0.9" />
      <stop offset="1" stop-color="grey" stop-opacity="1" />
    </linearGradient>

    <linearGradient id="bg" gradientUnits="userSpaceOnUse">
      <stop offset="0" stop-color="#b2b2b2" stop-opacity="1" />
      <stop offset="0.5" stop-color="black" stop-opacity="1" />
      <stop offset="1" stop-color="grey" stop-opacity="1" />
    </linearGradient>

    <filter id="bl1">
      <feGaussianBlur in="SourceGraphic" stdDeviation="10" />
    </filter>

    <mask id="dbMask">
      <rect x="0" y="0" rx="0" ry="0" width="500" height="500" fill="black"/>
      <rect x="0" y="0" rx="0" ry="0" width="215" height="300" transform=" translate(190, 100) rotate(-35 100 150)" fill="white"/>
    </mask>
    <mask id="3Mask">
      <rect x="0" y="0" rx="0" ry="0" width="500" height="500" fill="black"/>
      <rect x="0" y="0" rx="0" ry="0" width="90" height="300" transform="translate(127, 200) rotate(-35 45 150)" fill="white"/>
    </mask>

    <g fill="" id="3dbtxt">
      <text x="90" y="250" font-size="70" font-family="rr_beaverregular">It's</text>
      <text x="88" y="400" font-size="200" font-family="rr_beaverregular" mask="url(#3Mask)"> 3</text>
      <text x="200" y="340" font-size="200" font-family="rr_beaverregular" mask="url(#dbMask)">dB</text>
    </g>

    <filter id="shadowRed">
      <feDropShadow dx="2" dy="0" flood-color="red" stdDeviation="0"/>
    </filter>
    <filter id="shadowBlue">
      <feDropShadow dx="-2" dy="0" flood-color="#1689a3" stdDeviation="0"/>
    </filter>

    <script type="text/javascript">
    // <![CDATA[
    function calcToFrom() {
      var maxDur = 0;
      var minDur = 500;
      var from = Math.random() * (maxDur - minDur) + minDur;
      var to = Math.random() * (maxDur - minDur) + minDur;
      return {"to": to, "from": from}
    }
    function redAni(evt) {
      var v = calcToFrom();
      evt.target.setAttribute('from', '0 ' + v.from + '');
      evt.target.setAttribute('to', '0 ' + v.to + '');
      }
    function blueAni(evt) {
      var v = calcToFrom();
      evt.target.setAttribute('from', '0 ' + v.from + '');
      evt.target.setAttribute('to', '0 ' + v.to + '');
    }

    var from = 1;
    function light(evt) {
      var to = Math.random();
      evt.target.setAttribute('from', from);
      evt.target.setAttribute('to', to);
      from = to;
    }
 
   // ]]>
  </script>

    <rect x="0" y="0" width="500" height="50" id="recani">
      <animateTransform id="animation1"
      attributeType="XML"
      attributeName="transform"
      type="translate"
      from="0 0" to="0 0"
      dur="0.5s"
      onrepeat="redAni(evt)"
      begin="0s"
      repeatCount="indefinite"/>
    </rect>

    <rect x="0" y="0" width="500" height="50" id="recani2">
      <animateTransform id="animation1"
      attributeType="XML"
      attributeName="transform"
      type="translate"
      from="0 0" to="0 500"
      dur="0.3s"
      onrepeat="blueAni(evt)"
      begin="0s"
      repeatCount="indefinite"/>
    </rect>

    <mask id="red">
      <rect x="0" y="0" rx="0" ry="0" width="500" height="500" fill="black"/>
      <use xlink:href="#recani" stroke="white" stroke-width="0" opacity="1" fill="white"/>
    </mask>

    <mask id="blue">
      <rect x="0" y="0" rx="0" ry="0" width="500" height="500" fill="black"/>
      <use xlink:href="#recani2" stroke="white" stroke-width="0" opacity="1" fill="white"/>
    </mask>

    <mask id="invr">
      <rect x="0" y="0" rx="0" ry="0" width="500" height="500" fill="white"/>
      <use xlink:href="#recani" stroke="white" stroke-width="0" opacity="1" fill="black"/>
      <use xlink:href="#recani2" stroke="white" stroke-width="0" opacity="1" fill="black"/>
    </mask>



  </defs>
  <style>
  </style>

  <rect x="0" y="0" rx="0" ry="0" width="500" height="500" fill="black"/>
 
  <g transform="translate(0,-50)">

  <g>
  <!--use xlink:href="#invertedTriangle" stroke="param(p1) #929899" stroke-width="5"/-->
  <!--use xlink:href="#invertedTriangle" stroke="#616566" stroke-width="10" mask="url(#Mask)" /-->
  <use xlink:href="#invertedTriangle" id="trIn" stroke="#5BF8FA" stroke-width="5" opacity="0.8" filter="url(#bl1)"/>
  <use xlink:href="#invertedTriangle" id="trIn" stroke="#5BF8FA" stroke-width="5" opacity="0.8"/>
  <use xlink:href="#invertedTriangle" id="trOut" stroke="#5BF8FA" stroke-width="10" mask="url(#Mask)" filter="url(#bl1)" />
  <use xlink:href="#invertedTriangle" id="trOut" stroke="#5BF8FA" stroke-width="10" mask="url(#Mask)" />
            <animate id="opaani"
            attributeType="XML"
            attributeName="opacity"
            from="0" to="1"
            dur="0.4s"
            onrepeat="light(evt)"
            begin="0s"
            repeatCount="indefinite"/>
 
  </g>

  <!-- centerX: 171.595
       centerY: 127.25
  translate(-centerX*(factor-1), -centerY*(factor-1))
  scale(factor)

  <use xlink:href="#3dbtxt" class="" fill="black" id="t1" opacity="1" transform="translate(0,0)"/>
  -->

  <use xlink:href="#3dbtxt" class="glitch" id="t1" opacity="1" transform="translate(0,0)" mask="url(#invr)"/>
  <use xlink:href="#3dbtxt" class="glitch" id="tRed" opacity="1" transform="translate(-2,0)" mask="url(#red)" filter="url(#shadowRed)"/>
  <use xlink:href="#3dbtxt" class="glitch" id="tBlue" opacity="1" transform="translate(2,0)" mask="url(#blue)" filter="url(#shadowBlue)"/>

  </g>

</svg>

